@page "/EditGuide/{Id}"

@using System.Text.Json;
@inject IUserService UserService;

<h3 class="text-center">Edit A Guide</h3>



@if (isUpdated)
{
    <h3>Updated!</h3>
}
else
{
    <div class="container-fluid">
        <Form Model="@user"
            OnFinish="OnFinish"
            OnFinishFailed="OnFinishFailed"
            Size="@formSize">
            <div class="d-flex justify-content-center">
                <FormItem Label="Form Size">
                    <RadioGroup @bind-Value="@formSize">
                        <Radio RadioButton Value="@AntSizeLDSType.Small">Small</Radio>
                        <Radio RadioButton Value="@AntSizeLDSType.Default">Default</Radio>
                        <Radio RadioButton Value="@AntSizeLDSType.Large">Large</Radio>
                    </RadioGroup>
                </FormItem>
              </div>



        <div class="row">
            <div class="col">
            </div>
            <div class="col">

                <br />
                <FormItem Label="Name">
                <Input @bind-Value="@context.Name" />
                </FormItem>

                <FormItem Label="Email">
                <Input @bind-Value="@context.Email" />
                </FormItem>

                <FormItem class="col-md-12 text-center">
                <button HtmlType="submit" class="btn btn-primary">
                    Edit Guide
                </button>
                </FormItem>


            </div>
            <div class="col">
            </div>
        </div>


    </Form>


                </div>
             

                

                @code
{
    [Parameter]
    public string ID { get; set; }
    public class Model
    {

        public string Size { get; set; } = AntSizeLDSType.Small;
        public string InputName { get; set; } = "Enter their name here";
        public string InputEmail { get; set; } = "Enter their email here";





        public IEnumerable<string> Names { get; set; } = Array.Empty<string>();
    }

    private Model model = new Model();


    record Person(string Name);
    private List<Person> _persons = new List<Person>
        {
            new Person("John"),
            new Person("Lucy"),
            new Person("Jack"),
            new Person("Emily"),
        };

    private User user;
    private string formSize = AntSizeLDSType.Small;
    private bool isUpdated = false;

    protected async override Task OnInitializedAsync()
    {
        Int32.TryParse(ID, out int id);
        user = await UserService.GetUserById(id);
    }

    private async Task OnFinish(EditContext editContext)
    {
        await UserService.UpdateUser(user);
        isUpdated = true;
        StateHasChanged();
    }

    private void OnFinishFailed(EditContext editContext)
    {
        Console.WriteLine($"Failed:{JsonSerializer.Serialize(model)}");
    }

}

