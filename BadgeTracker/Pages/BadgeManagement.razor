@page "/BadgeManagement"

<h3>Badge and Activity Management</h3>



<Table DataSource="listOfData" TItem="ItemData" RowClassName="@(_=>"editable-row")" Bordered TableLayout="fixed">
    <ChildContent Context="data">
        <Column TData="string" Title="Name">
            @if (!editCache[data.Id].edit)
            {
                @data.Name
            }
            else
            {
                <Input @bind-Value="editCache[data.Id].data.Name" />
            }
        </Column>

        <Column TData="string" Title="Prerequisites">
            <Dropdown @ref="@_dropdown">
                <Overlay>
                    <Menu OnMenuItemClicked="HandleMenuClick" AutoCloseDropdown="@false">
                        <MenuItem Id="1">Clicking me will not close the menu.</MenuItem>
                        <MenuItem Id="2">Clicking me will not close the menu also.</MenuItem>
                        <MenuItem Id="3">Clicking me will close the menu.</MenuItem>
                    </Menu>
                </Overlay>
                <ChildContent>
                    <a class="ant-dropdown-link" @onclick:preventDefault>
                        Hover me <Icon Type="down" />
                    </a>
                </ChildContent>
            </Dropdown>
        </Column>



        <ActionColumn Title="Action">
            <a href="EditBadge">Edit</a>
            @*
                @if (!editCache[data.Id].edit)
                {
                    <a @onclick="() => startEdit(data.Id)">Edit</a>
                }
                else
                {

                    <a @onclick="() => saveEdit(data.Id)" class="save">Save</a>
                    <Popconfirm Title="Sure to cancel?"
                                OnConfirm="() => cancelEdit(data.Id)"
                                OkText="Yes"
                                CancelText="No">
                        <a>Cancel</a>
                    </Popconfirm>
                }
            *@
        </ActionColumn>
    </ChildContent>
</Table>








<style>
    .save {
        margin-right: 8px;
    }
</style>

@code{

    record ItemData
    {
        public string Id { get; set; }
        public string Name { get; set; }
        public int Age { get; set; }
        public string Address { get; set; }
    };

    IDictionary<string, (bool edit, ItemData data)> editCache = new Dictionary<string, (bool edit, ItemData data)>();
    List<ItemData> listOfData = new();

    int i = 0;
    string editId;

    void startEdit(string id)
    {
        var data = editCache[id];
        editCache[id] = (true, data.data with { }); // add a copy in cache
    }

    void cancelEdit(string id)
    {
        var data = listOfData.FirstOrDefault(item => item.Id == id);
        editCache[id] = (false, data); // recovery
    }

    void saveEdit(string id)
    {
        var index = listOfData.FindIndex(item => item.Id == id);
        listOfData[index] = editCache[id].data; // apply the copy to data source
        editCache[id] = (false, listOfData[index]); // don't affect rows in editing
    }

    protected override void OnInitialized()
    {
        listOfData = Enumerable.Range(0, 100).Select(i => new ItemData { Id = $"{i}", Name = $"Edrward {i}", Age = 32, Address = $"London Park no. {i}" }).ToList();
        listOfData.ForEach(item =>
        {
            editCache[item.Id] = (false, item);
        });
    }

    private Dropdown _dropdown;

    private async void HandleMenuClick(MenuItem item)
    {
        if (item.Id == "3")
        {
            await _dropdown.Close();
        }
    }

}