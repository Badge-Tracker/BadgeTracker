@page "/AddGuide"


@inject IUserService UserService;
@inject NavigationManager NavigationManager
@using System.Text.Json;

<style>
    .full-height {
        min-height: 100vh;
    }

    .centered-content {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        height: 100%;
    }
</style>




@if (isCreated)
{

    <div class="container full-height">
        <div class="row full-height centered-content">
            <div class="col-md-6 text-center">
                <h3>Created Girl Guide @user.Name!</h3>
                <button class="btn btn-primary" @onclick="GoToUserManagement">Back to Girl Guides</button>
            </div>
        </div>
    </div>
}
else {
    <h3 class="text-center">Add a Guide</h3>
    <div class="container-fluid panel">
        <Form Model="@user"
              OnFinish="OnFinish"
              OnFinishFailed="OnFinishFailed"
              Size="@formSize">
          <div class="d-flex justify-content-center">
            <FormItem Label="Form Size">
                    <RadioGroup @bind-Value="@formSize">
                    <Radio RadioButton Value="@AntSizeLDSType.Small">Small</Radio>
                    <Radio RadioButton Value="@AntSizeLDSType.Default">Default</Radio>
                    <Radio RadioButton Value="@AntSizeLDSType.Large">Large</Radio>
                </RadioGroup>
            </FormItem>
        </div>

        <div class="row">
            <div class="col">
            </div>
            <div class="col">
                <FormItem Label="Name">
                <Input @bind-Value="@context.Name" />
                </FormItem>

                <FormItem Label="Email">
                <Input @bind-Value="@context.Email" />
                </FormItem>
                <FormItem class="col-md-12 text-center">
                    <button HtmlType="submit" class="btn btn-primary">Add Guide</button>
                </FormItem>
            </div>

            <div class="col">
            </div>
                          
        </div>
        </Form>

    </div>
                    

}


@code
{
    public class Model
    {
        public string Size { get; set; } = AntSizeLDSType.Small;
        public string InputName { get; set; } = "Enter their name here";
        public string InputEmail { get; set; } = "Enter their email here";
        public IEnumerable<string> Names { get; set; } = Array.Empty<string>();
    }

    private Model model = new Model();
    private User user = new();
    private string formSize = AntSizeLDSType.Small;
    private bool isCreated = false;

    private async Task OnFinish(EditContext editContext)
    {
        await UserService.AddUser(user);
        isCreated = true;
        StateHasChanged();
    }

    private void OnFinishFailed(EditContext editContext)
    {
        Console.WriteLine($"Failed:{JsonSerializer.Serialize(model)}");
    }
    private void GoToUserManagement()
    {
        NavigationManager.NavigateTo("/UserManagement");
    }
}

