@page "/AddGuide"

@inject IUserService UserService;

<h3>AddGuide</h3>

@using System.Text.Json;

@if (isCreated)
{
    <h3>Created</h3>
}
{
    <div class="container-fluid">
        <Form Model="@user"
              OnFinish="OnFinish"
              OnFinishFailed="OnFinishFailed"
              Size="@formSize">
            <div class="d-flex justify-content-center">
                <FormItem Label="Form Size">
                    <RadioGroup @bind-Value="@formSize">
                        <Radio RadioButton Value="@AntSizeLDSType.Small">Small</Radio>
                        <Radio RadioButton Value="@AntSizeLDSType.Default">Default</Radio>
                        <Radio RadioButton Value="@AntSizeLDSType.Large">Large</Radio>
                            </RadioGroup>
                            </FormItem>
                        </div>

                        <div class="row">

                            <div class="col-md-6 offset-md-3">
                                <FormItem Label="Name">
                                <Input @bind-Value="@context.Name" />
                                </FormItem>

                                <FormItem Label="Email">
                                <Input @bind-Value="@context.Email" />
                                </FormItem>

                                @*
                    <FormItem Label="Birthday">
                    <DatePicker @bind-Value="@context.DatePicker" />
                    </FormItem>

                    <FormItem Label="Group">
                    <Select Mode="default"
                    DataSource="@_persons"
                    @bind-Value="@context.Name"
                    LabelName="@nameof(Person.Name)"
                    ValueName="@nameof(Person.Name)">
                    </Select>
                    </FormItem>

                    <FormItem Label="Age">
                    <AntDesign.InputNumber @bind-Value="@context.Number" />
                    </FormItem>

                    <FormItem Label="InputArea">
                    <TextArea placeholder="Input any other important information here" />
                    </FormItem>
                    *@

                            </div>
                            <div class="d-flex justify-content-center">
                                <FormItem WrapperColOffset="8" WrapperColSpan="16">
                                <button HtmlType="submit" class="btn btn-primary">
                                    Submit
                                </button>
                                </FormItem>
                            </div>
                        </div>


                        </Form>


                    </div>
}



                @code
                {
    public class Model
    {
        public string Size { get; set; } = AntSizeLDSType.Small;
        public string InputName { get; set; } = "Enter their name here";
        public string InputEmail { get; set; } = "Enter their email here";





        public IEnumerable<string> Names { get; set; } = Array.Empty<string>();
    }

    private Model model = new Model();


    private User user = new();
    private string formSize = AntSizeLDSType.Small;
    private bool isCreated = false;

    private async Task OnFinish(EditContext editContext)
    {
        await UserService.AddUser(user);
        isCreated = true;
        StateHasChanged();
    }

    record Person(string Name);
    private List<Person> _persons = new List<Person>
        {
            new Person("John"),
            new Person("Lucy"),
            new Person("Jack"),
            new Person("Emily"),
        };


    private void OnFinishFailed(EditContext editContext)
    {
        Console.WriteLine($"Failed:{JsonSerializer.Serialize(model)}");
    }

}

